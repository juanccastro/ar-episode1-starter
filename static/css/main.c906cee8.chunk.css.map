{"version":3,"sources":["main.c906cee8.chunk.css","components/header.scss","breakpoints.scss","varibles.scss","components/banner.scss","components/cases.scss","components/TextScroller.scss","App.scss"],"names":[],"mappings":"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","file":"main.c906cee8.chunk.css","sourcesContent":["@import url(https://fonts.googleapis.com/css2?family=Montserrat:wght@100&display=swap);\n.header{position:fixed;width:100%;height:128px;z-index:10;mix-blend-mode:difference}@media (max-width: 425px){.header{height:20%}}.header .logo a{font-family:\"Editorial New\", \"Helvetica Neue\", sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#e1e1e1;text-decoration:none;font-size:5vh;letter-spacing:.05rem;font-weight:400 !important;z-index:10}@media (max-width: 425px){.header .logo a{font-size:3vh}}.header .nav a{font-family:\"Editorial New\", \"Helvetica Neue\", sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#e1e1e1;font-size:5vh;letter-spacing:.05rem;font-weight:400 !important;text-decoration:none;mix-blend-mode:difference;z-index:10}@media (max-width: 425px){.header .nav a{font-size:3vh}}.header .nav span{margin-bottom:.3rem;background:#000;height:2px;width:100%;display:block}.main{width:100%;background-color:#e1e1e1}.main .row{display:block !important}.main .row h2{margin-top:0 !important;font-size:5vh;font-weight:400;text-align:justify;color:#000;text-transform:uppercase}@media (max-width: 768px){.main .row h2{font-size:3vh}}.main .row .mar{margin-bottom:10%}.main .row img{width:100%;display:block;margin-left:auto;margin-right:auto}@media (max-width: 425px){.main .row img{width:80%}}.main .row .half{width:50%;margin-left:auto;margin-right:0;margin-top:5%}@media (max-width: 425px){.main .row .half{width:100%}}.main .row .sub{font-family:\"Editorial New\", \"Helvetica Neue\", sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-transform:uppercase;font-size:3vh;font-weight:400;color:#000}.cases{width:100%;background-color:#e1e1e1}.cases .row{display:block !important}.cases .row .case{background-color:#e1e1e1;margin-top:0 !important;margin-bottom:0 !important;padding-top:5% !important;padding-bottom:5% !important}.cases .row .case .case-details{width:100%;-webkit-flex-direction:column;flex-direction:column;-webkit-justify-content:center;justify-content:center}.cases .row .case .case-details .norow{display:-webkit-flex !important;display:flex !important}@media (max-width: 425px){.cases .row .case .case-details .norow{display:block !important;-webkit-flex-direction:column !important;flex-direction:column !important}}.cases .row .case .case-details .der{display:-webkit-flex;display:flex;right:0}@media (max-width: 425px){.cases .row .case .case-details .der{display:block !important}}.cases .row .case .case-details span{font-size:5vh;font-weight:55;color:#000;text-transform:uppercase}.cases .row .case .case-details .sub{font-family:\"Editorial New\", \"Helvetica Neue\", sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;letter-spacing:3%;text-transform:uppercase;font-size:3vh;font-weight:400;color:#000}.cases .row .case .case-details .des{font-size:3vh}.cases .row .case .case-details h2{font-family:\"Editorial New\", \"Helvetica Neue\", sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-align:center;font-size:12vh;letter-spacing:-7% !important;font-weight:400;text-transform:uppercase;color:#000}.cases .row .case .case-image{top:0;left:0;transition:0.4s cubic-bezier(0.6, -0.05, 0.1, 0.99)}.cases .row .case .case-image img{width:100%;margin-top:5% !important;margin-bottom:5% !important}.cases .row .case .case-image .half-left{width:50%;right:0}@media (max-width: 425px){.cases .row .case .case-image .half-left{width:100%}}.datas{width:100% !important;background-color:#000 !important;margin-top:5% !important;margin-bottom:0% !important}.datas .row{padding:0% !important}.datas .row .dt{height:150px;background-color:#000}.datas .row .dt .case-details{-webkit-flex-direction:row;flex-direction:row;box-sizing:border-box;z-index:5}.datas .row .dt .case-details span{font-size:5vh !important;font-weight:55;color:#e1e1e1 !important;text-transform:uppercase}.datas .row .dt .case-details .sub{text-transform:uppercase;font-size:5vh;font-weight:400;color:#000}body,html{-webkit-user-select:none;-ms-user-select:none;user-select:none;background-color:#e1e1e1;-ms-scroll-chaining:none;overscroll-behavior:none;margin:0;font-family:\"Neue Haas Grotesk Display Pro 35\", \"Helvetica Neue\", sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.container{width:100%;min-width:100%;margin:0 auto;height:100%}.container .row{display:-webkit-flex;display:flex;height:100%;padding:0 32px}@media (max-width: 425px){.container .row{padding:0 16px}}.container .v-center{-webkit-align-items:center;align-items:center}.container .space-between{-webkit-justify-content:space-between;justify-content:space-between}.container-fluid{width:100%;height:100%}.container-fluid .row{display:-webkit-flex;display:flex;height:100%}\n\n",".header{\r\n    position: fixed;\r\n    width: 100%;\r\n    height: 128px;\r\n    z-index: 10;\r\n    mix-blend-mode: difference;\r\n\r\n     @include media('<=phone'){\r\n        height: 20%;\r\n    }\r\n\r\n    .logo{\r\n        a{\r\n            font-family: \"Editorial New\", \"Helvetica Neue\", sans-serif;\r\n            -webkit-font-smoothing: antialiased;\r\n            -moz-osx-font-smoothing: grayscale;\r\n            color: $white;\r\n            text-decoration: none;\r\n            //font-size: 55rem;\r\n            font-size: 5vh;\r\n            letter-spacing: .05rem;\r\n            font-weight: 400 !important;\r\n            z-index: 10;\r\n            @include media('<=phone'){\r\n                font-size: 3vh;\r\n            \r\n            }\r\n        }\r\n    }\r\n    .nav{\r\n        a{\r\n            font-family: \"Editorial New\", \"Helvetica Neue\", sans-serif;\r\n            -webkit-font-smoothing: antialiased;\r\n            -moz-osx-font-smoothing: grayscale;\r\n            color: $white;\r\n            font-size: 5vh;\r\n            letter-spacing: .05rem; \r\n            font-weight: 400 !important;\r\n            text-decoration: none;\r\n            //font-weight: 55;\r\n            mix-blend-mode: difference;\r\n            z-index: 10;\r\n            @include media('<=phone'){\r\n                font-size: 3vh;\r\n            }\r\n        }\r\n         //width: 25px;\r\n        /*  @include media('<=phone'){\r\n             width: 100%;\r\n         } */\r\n         span{\r\n             margin-bottom: .3rem;\r\n             background: $black;\r\n             height: 2px;\r\n             width: 100%;\r\n             display: block;\r\n         }\r\n            \r\n    }\r\n}","$breakpoints: (\n  \"phone\": 425px,\n  \"tablet\": 768px,\n  \"desktop\": 1366px,\n  \"LGdesktop\": 1920px\n) !default;\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @author Eduardo Boucas\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///\t\t'retina2x': (\n///\t\t\t'(-webkit-min-device-pixel-ratio: 2)',\n///\t\t\t'(min-resolution: 192dpi)'\n///\t\t)\n///\t);\n///\n$media-expressions: (\n  \"screen\": \"screen\",\n  \"print\": \"print\",\n  \"handheld\": \"handheld\",\n  \"retina2x\": (\n    \"(-webkit-min-device-pixel-ratio: 2)\",\n    \"(min-resolution: 192dpi)\"\n  ),\n  \"retina3x\": (\n    \"(-webkit-min-device-pixel-ratio: 3)\",\n    \"(min-resolution: 350dpi)\"\n  )\n) !default;\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @author Eduardo Boucas\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media(\">128px\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media(\">20em\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media(\">2.0rem\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  \"px\": 1,\n  \"em\": 0.01,\n  \"rem\": 0.1\n) !default;\n///\n/// Generates a media query based on a list of conditions\n///\n/// @author Eduardo Boucas\n///\n/// @param {List}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media(\">phone\") { }\n///\n/// @example scss - With two set breakpoints\n///  @include media(\">phone\", \"<=tablet\") { }\n///\n/// @example scss - With custom values\n///  @include media(\">=358px\", \"<850px\") { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media(\">desktop\", \"<=1350px\") { }\n///\n/// @example scss - With a static expression\n///  @include media(\"retina2x\") { }\n///\n/// @example scss - Mixing everything\n///  @include media(\">=350px\", \"<tablet\", \"retina3x\") { }\n///\n@mixin media($conditions...) {\n  @for $i from 1 through length($conditions) {\n    $conditions: set-nth(\n      $conditions,\n      $i,\n      parse-expression(nth($conditions, $i))\n    );\n  }\n\n  $branches: get-query-branches($conditions);\n  $query: \"\";\n\n  @each $branch in $branches {\n    @if (str-length($query) != 0) {\n      $query: $query + \", \";\n    }\n\n    $query: $query + $branch;\n  }\n\n  @media #{$query} {\n    @content;\n  }\n}\n\n///\n/// Reads a list of media query expressions and separates logical disjunctions into different branches\n///\n/// @author Eduardo Boucas\n///\n/// @param {List}   $expressions  - list of expressions\n///\n/// @throws `$expression` is not a valid expression\n///\n/// @return {List | Null}\n///\n@function get-query-branches($expressions) {\n  $result: \"\";\n  $has-groups: false;\n\n  // Getting initial snapshot and looking for groups\n  @each $expression in $expressions {\n    @if (str-length($result) != 0) {\n      $result: $result + \" and \";\n    }\n\n    @if (type-of($expression) == \"string\") {\n      $result: $result + $expression;\n    } @else if (type-of($expression) == \"list\") {\n      $result: $result + nth($expression, 1);\n      $has-groups: true;\n    } @else {\n      @warn '#{$expression} is not a valid expression.';\n    }\n  }\n\n  // If we have groups, we have to create all possible combinations\n  @if $has-groups {\n    @each $expression in $expressions {\n      @if (type-of($expression) == \"list\") {\n        $first: nth($expression, 1);\n\n        @each $member in $expression {\n          @if ($member != $first) {\n            @each $partial in $result {\n              $result: join(\n                $result,\n                str-replace-first($first, $member, $partial)\n              );\n            }\n          }\n        }\n      }\n    }\n  }\n\n  @return $result;\n}\n\n///\n/// Parses a string to form a media query expression\n///\n/// @author Eduardo Boucas\n///\n/// @param {String}   $expression  - expression (in string)\n///\n/// @throws Expression with type `type-of($expression)` detected, string expected\n/// @throws `$expression` is missing an operator\n/// @throws Unknown unit: `$unit`\n///\n/// @return {String | Null}\n///\n@function parse-expression($expression) {\n  $operator: \"\";\n  $value: \"\";\n  $element: \"\";\n  $result: \"\";\n  $is-width: true;\n\n  @if (type-of($expression) != \"string\") {\n    @warn 'Expression with type `#{type-of($expression)}` detected, string expected.';\n  }\n\n  // Separating the operator from the rest of the expression\n  @if (str-slice($expression, 2, 2) == \"=\") {\n    $operator: str-slice($expression, 1, 2);\n    $value: str-slice($expression, 3);\n  } @else {\n    $operator: str-slice($expression, 1, 1);\n    $value: str-slice($expression, 2);\n  }\n\n  // Checking what type of expression we're dealing with\n  @if map-has-key($breakpoints, $value) {\n    $result: map-get($breakpoints, $value);\n  } @else if map-has-key($media-expressions, $expression) {\n    $result: map-get($media-expressions, $expression);\n    $is-width: false;\n  } @else {\n    $result: to-number($value);\n  }\n\n  @if ($is-width) {\n    $unit: unit($result);\n    $interval: 0;\n\n    @if (map-has-key($unit-intervals, $unit)) {\n      $interval: map-get($unit-intervals, $unit);\n    } @else {\n      @warn 'Unknown unit: #{$unit}';\n    }\n\n    @if ($operator == \">\") {\n      $element: \"(min-width: #{$result + $interval})\";\n    } @else if ($operator == \"<\") {\n      $element: \"(max-width: #{$result - $interval})\";\n    } @else if ($operator == \">=\") {\n      $element: \"(min-width: #{$result})\";\n    } @else if ($operator == \"<=\") {\n      $element: \"(max-width: #{$result})\";\n    } @else {\n      @warn '#{$expression} is missing an operator.';\n    }\n  } @else {\n    $element: $result;\n  }\n\n  @return $element;\n}\n\n///\n/// Replaces the first occurence of the string with the replacement string\n///\n/// @author Eduardo Boucas\n///\n/// @param {String}   $search  - The value being searched for\n/// @param {String}   $replace  - The replacement string\n/// @param {String}   $subject  - The string being replaced on\n///\n/// @return {String | Null}\n///\n@function str-replace-first($search, $replace, $subject) {\n  $search-start: str-index($subject, $search);\n\n  @if $search-start == null {\n    @return $subject;\n  }\n\n  $result: str-slice($subject, 0, $search-start - 1);\n  $result: $result + $replace;\n  $result: $result + str-slice($subject, $search-start + str-length($search));\n\n  @return $result;\n}\n\n///\n/// Casts a number to a string\n///\n/// @author Hugo Giraudel\n///\n/// @param {String}   $string  - Number to be parsed\n///\n/// @return {List | Null}\n///\n@function to-number($string) {\n  // Matrices\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\n  $numbers: 0 1 2 3 4 5 6 7 8 9;\n\n  // Result\n  $result: 0;\n  $divider: 0;\n  $minus: false;\n\n  // Looping through all characters\n  @for $i from 1 through str-length($string) {\n    $character: str-slice($string, $i, $i);\n    $index: index($strings, $character);\n\n    @if $character == \"-\" {\n      $minus: true;\n    } @else if $character == \".\" {\n      $divider: 1;\n    } @else {\n      @if type-of($index) != \"number\" {\n        $result: if($minus, $result * -1, $result);\n        @return _length($result, str-slice($string, $i));\n      }\n\n      $number: nth($numbers, $index);\n\n      @if $divider == 0 {\n        $result: $result * 10;\n      } @else {\n        // Move the decimal dot to the left\n        $divider: $divider * 10;\n        $number: $number / $divider;\n      }\n\n      $result: $result + $number;\n    }\n  }\n\n  @return if($minus, $result * -1, $result);\n}\n\n@function _length($number, $unit) {\n  $strings: \"px\" \"cm\" \"mm\" \"%\" \"ch\" \"pica\" \"in\" \"em\" \"rem\" \"pt\" \"pc\" \"ex\" \"vw\"\n    \"vh\" \"vmin\" \"vmax\";\n  $units: 1px 1cm 1mm 1% 1ch 1pica 1in 1em 1rem 1pt 1pc 1ex 1vw 1vh 1vmin 1vmax;\n  $index: index($strings, $unit);\n\n  @if type-of($index) != \"number\" {\n    @warn 'Unknown unit `#{$unit}`.';\n    @return false;\n  }\n\n  @return $number * nth($units, $index);\n}\n","$black: #000000;\n$white: #e1e1e1;\n",".main{\r\n   //height: 80vh; //fallback option\r\n   // height: calc(var(--vh,1vh)*80);\r\n   width: 100%;\r\n    background-color: $white;\r\n    .row{\r\n        display: block !important;\r\n        //flex-direction: column;\r\n        // justify-content: center;\r\n        h2{\r\n            margin-top: 0 !important;\r\n            //z-index: 5;\r\n            font-size: 5vh;\r\n            //line-height: 6vh;\r\n            font-weight: 400;\r\n            text-align: justify;\r\n            color: $black;\r\n            text-transform: uppercase;\r\n            \r\n             @include media(\"<=tablet\"){\r\n                font-size: 3vh;\r\n            }\r\n            @include media (\"<=phone\"){\r\n                //margin-top: 72px;\r\n                //line-height: 2.2rem;\r\n            } \r\n            \r\n        }\r\n\r\n        .mar{\r\n           margin-bottom: 10%;\r\n            \r\n        }\r\n\r\n        img{\r\n            width: 100%;\r\n            display: block;\r\n            margin-left: auto;\r\n            margin-right: auto;\r\n            @include media (\"<=phone\"){\r\n                width: 80%;\r\n            } \r\n        }\r\n\r\n        .half{                     \r\n            width: 50%;\r\n            margin-left: auto; \r\n            margin-right: 0;\r\n            margin-top: 5%;\r\n            @include media (\"<=phone\"){\r\n                width: 100%;\r\n            } \r\n         }\r\n        .sub{      \r\n            font-family: \"Editorial New\", \"Helvetica Neue\", sans-serif;\r\n            -webkit-font-smoothing: antialiased;\r\n            -moz-osx-font-smoothing: grayscale;               \r\n            text-transform: uppercase;\r\n            font-size: 3vh;\r\n            font-weight: 400;\r\n            color: $black;\r\n         }\r\n         \r\n    }\r\n}",".cases{\r\n    width: 100%;\r\n     //height:150vh;\r\n     //height: calc(var(--vh,1vh)*150);\r\n     background-color: $white;\r\n     \r\n\r\n    .row{\r\n        display: block !important;\r\n        .case{\r\n        background-color: $white;\r\n        //  position: relative;\r\n        //  background: $black;\r\n        //  cursor: pointer;\r\n        margin-top: 0 !important;\r\n        margin-bottom: 0 !important;\r\n        padding-top: 5% !important;\r\n        padding-bottom: 5% !important;\r\n        \r\n        .case-details{\r\n            width: 100%;\r\n            //height: 100%;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n            // height: calc(var(--vh,1vh)*50);\r\n            //    box-sizing: border-box;\r\n            //    z-index: 1;\r\n            //   position: relative;\r\n\r\n            .norow{\r\n                display: flex !important;\r\n                @include media('<=phone'){\r\n                    display:block !important;\r\n                    flex-direction: column !important;\r\n             }\r\n            }\r\n\r\n            .der{\r\n                display: flex;\r\n                right: 0;\r\n                @include media('<=phone'){\r\n                    display:block !important;\r\n             }\r\n            }\r\n\r\n            span{\r\n                //   margin-top: 156px;\r\n                font-size: 5vh;\r\n                font-weight: 55;\r\n                color: $black;\r\n                text-transform: uppercase;\r\n            }\r\n\r\n                .sub{           \r\n                    font-family: \"Editorial New\", \"Helvetica Neue\", sans-serif;\r\n                     -webkit-font-smoothing: antialiased;\r\n                     -moz-osx-font-smoothing: grayscale;\r\n                     letter-spacing: 3%;          \r\n                    text-transform: uppercase;\r\n                    font-size: 3vh;\r\n                    font-weight: 400;\r\n                    color: $black;\r\n                 }\r\n\r\n                .des{\r\n                    font-size: 3vh;\r\n                } \r\n                \r\n                h2{\r\n                    font-family: \"Editorial New\", \"Helvetica Neue\", sans-serif;\r\n                     -webkit-font-smoothing: antialiased;\r\n                     -moz-osx-font-smoothing: grayscale;\r\n                    text-align: center;\r\n                    font-size: 12vh;\r\n                    //line-height: 12vh;\r\n                    letter-spacing: -7% !important;\r\n                    font-weight: 400;\r\n                    text-transform: uppercase;\r\n                    // width: 85%;\r\n                    // margin-top: 16px;\r\n                    color: $black;\r\n                    //margin-bottom: 5% !important; \r\n                    @include media('<=phone'){\r\n                        \r\n                 }\r\n                }\r\n            }\r\n            .case-image{\r\n                top: 0;\r\n                left: 0;\r\n                transition: .4s cubic-bezier(.6,-.05,.1,.99);\r\n                img{\r\n                //  height: 50%;\r\n                    width: 100%;\r\n                    margin-top: 5% !important;\r\n                    margin-bottom: 5% !important;\r\n                //  object-fit: cover;\r\n                }\r\n\r\n                .half-left{\r\n                    width: 50%;\r\n                    right: 0;\r\n                    @include media('<=phone'){\r\n                           width: 100%;\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}",".datas{\r\n    width: 100% !important;\r\n   //height:20vh;\r\n   //height: calc(var(--vh,1vh)*20);\r\n    background-color: $black !important;\r\n    //overflow: hidden;\r\n    margin-top: 5% !important;\r\n    margin-bottom: 0% !important;\r\n   .row{\r\n      // display: block !important;\r\n      padding: 0% !important;\r\n    .dt{\r\n        height: 150px;\r\n        background-color: $black;\r\n        //position: relative;\r\n       //  background: $black;\r\n       //  cursor: pointer;\r\n        .case-details{\r\n               //display: flex !important;\r\n               //width: 33%;\r\n               //height: 100%;\r\n               flex-direction: row;\r\n               //justify-content: center;\r\n               box-sizing: border-box;\r\n               z-index: 5;\r\n              // position: absolute;\r\n               \r\n        span{\r\n               //   margin-top: 156px;\r\n               //font-size: 60px !important;\r\n               font-size: 5vh !important;\r\n               font-weight: 55;\r\n               color: $white !important;\r\n               text-transform: uppercase;\r\n           }\r\n\r\n               .sub{                     \r\n                   text-transform: uppercase;\r\n                   //font-size: 30px;\r\n                   font-size: 5vh;\r\n                   font-weight: 400;\r\n                   color: $black;\r\n                }\r\n\r\n           }\r\n           \r\n       }\r\n\r\n   }\r\n}","@import url(\"https://fonts.googleapis.com/css2?family=Montserrat:wght@100&display=swap\");\n@import \"./varibles.scss\";\n@import \"./breakpoints.scss\";\n@import \"./components/header.scss\";\n@import \"./components/banner.scss\";\n@import \"./components/cases.scss\";\n@import \"./components/TextScroller.scss\";\n\nbody,\nhtml {\n  user-select: none;\n  background-color: $white;\n  overscroll-behavior: none;\n  margin: 0;\n  font-family: \"Neue Haas Grotesk Display Pro 35\", \"Helvetica Neue\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.container {\n  width: 100%;  \n  min-width: 100%;\n  margin: 0 auto;\n  height: 100%;\n  \n  // @include media(\"<=1840px\") {\n  //   width: 1280px;\n  //   min-width: 1280px;\n  // }\n  // @include media(\"<=desktop\") {\n  //   width: 1080px;\n  //   min-width: 1080px;\n  // }\n  // @include media(\"<=1080px\") {\n  //   width: 100%;\n  //   min-width: 100%;\n  // }\n  .row {\n    display: flex;\n    height: 100%;\n    padding: 0 32px;\n    @include media(\"<=phone\") {\n      padding: 0 16px;\n    }\n  }\n  .v-center {\n    align-items: center;\n  }\n  .space-between {\n    justify-content: space-between;\n  }\n}\n\n.container-fluid {\n  width: 100%;\n  height: 100%;\n    .row {\n      display: flex;\n      height: 100%;\n    }\n}\n"]}